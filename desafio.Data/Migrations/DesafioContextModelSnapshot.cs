// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using desafio.Data;

namespace desafio.Data.Migrations
{
    [DbContext(typeof(DesafioContext))]
    partial class DesafioContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.2-rtm-30932")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("desafio.Data.Models.Cartao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("LoteArquivoId");

                    b.Property<string>("NumCartao");

                    b.Property<int>("UsuarioId");

                    b.HasKey("Id");

                    b.HasIndex("LoteArquivoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("cartoes");

                    b.HasData(
                        new { Id = 1, NumCartao = "123457890123", UsuarioId = 1 }
                    );
                });

            modelBuilder.Entity("desafio.Data.Models.LoteArquivo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataArquivo");

                    b.Property<string>("Lote");

                    b.Property<string>("Nome");

                    b.Property<int>("TotalRegistros");

                    b.HasKey("Id");

                    b.ToTable("lotearquivos");
                });

            modelBuilder.Entity("desafio.Data.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Login");

                    b.Property<string>("Nome");

                    b.Property<string>("Senha");

                    b.HasKey("Id");

                    b.ToTable("usuarios");

                    b.HasData(
                        new { Id = 1, Login = "teste", Nome = "teste", Senha = "teste123" }
                    );
                });

            modelBuilder.Entity("desafio.Data.Models.Cartao", b =>
                {
                    b.HasOne("desafio.Data.Models.LoteArquivo")
                        .WithMany("Cartoes")
                        .HasForeignKey("LoteArquivoId");

                    b.HasOne("desafio.Data.Models.Usuario", "Usuario")
                        .WithMany("Cartoes")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
